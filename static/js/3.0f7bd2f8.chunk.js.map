{"version":3,"file":"static/js/3.0f7bd2f8.chunk.js","mappings":"8KACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAAmG,8BAAnG,EAA0I,wBAA1I,EAA2K,wBAA3K,EAA6M,yB,6BCkB7M,EAVwC,SAACA,GACrC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,iBAAKC,UAAWC,EAAe,IAAMA,EAArC,WACI,gBAAMD,UAAWC,EAAcC,IAAKL,EAAMM,QAC1C,UAAC,KAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,EAApC,UAAmDJ,EAAMS,KAAzD,WCHZ,EANqC,SAACT,GAClC,OACI,gBAAKG,UAAWC,EAAhB,SAAgCJ,EAAMU,W,iDCkCxCC,GAAcC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAsBC,EAAAA,EAAAA,GAA6C,CACrEC,KAAM,cADkBD,EAT0E,SAACd,GACnG,OAAO,iBAAMgB,SAAUhB,EAAMiB,aAAtB,UACH,4BACKC,EAAAA,EAAAA,IAAiCC,EAAAA,GAAU,CAACC,EAAAA,EAAUT,GAAc,iBAAkB,sBACvF,SAACU,EAAA,EAAD,CAAQC,KAAM,yBAU1B,EA5CmF,SAACtB,GAChF,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYrB,KAAMqB,EAAOrB,KACzBG,KAAMkB,EAAOlB,KACGP,GAAIyB,EAAOzB,IAAtByB,EAAOzB,OACtE0B,EAAmB5B,EAAMwB,YAAYK,SAASH,KAAI,SAAAhB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SACxBA,EAAQR,OAI3E,OACI,iBAAKC,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC,IAAD,CAAS0B,QAAS,YACjBP,MAEL,4BACI,SAAC,IAAD,CAASO,QAAS,aACjBF,GACD,SAACf,EAAD,CAAqBG,SAZhB,SAACe,GACd/B,EAAMgC,WAAWD,a,oBCZzB,GAAeE,E,MAAAA,KAA6BC,EAAAA,EAAAA,KALtB,SAACC,GACnB,MAAO,CACHX,YAAaW,EAAMX,eAG0C,CAC7DQ,WAAYI,EAAAA,EAAAA,aAEhBC,EAAAA,EAHJ,CAGsBC","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Rkmz7\",\"avatar\":\"Dialogs_avatar__UQ3C1\",\"dialogsItems\":\"Dialogs_dialogsItems__s9yZ6\",\"active\":\"Dialogs_active__MX5s-\",\"dialog\":\"Dialogs_dialog__iVj0e\",\"message\":\"Dialogs_message__TUn19\"};","import style from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    link: string\r\n    name: string\r\n}\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <img  className={style.avatar} src={props.link}/>\r\n            <NavLink to={path} activeClassName={style.active}>{props.name}:</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import style from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from 'react'\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\nimport {createField, Textarea} from \"../common/FormControls/FormControls\";\r\nimport Button from \"../common/Buttons/Button\";\r\nimport Heading from \"../common/Headings/Headings\";\r\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\ntype OwnPropsType = {}\r\nconst Dialogs: React.FC<MapStatePropsType & MapDispatchPropsType & OwnPropsType> = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem link={dialog.link}\r\n                                                                  name={dialog.name}\r\n                                                                  key={dialog.id} id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message message={message.message}\r\n                                                                  key={message.id}/>)\r\n    let addMessage = (newMessageText: string) => {\r\n        props.addMessage(newMessageText)\r\n    }\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                <Heading heading={'Dialogs'} />\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <Heading heading={'Messages'} />\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={addMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\ntype AddMessageDataType = {\r\n    newMessageText: string\r\n}\r\ntype AddMessagePropsType = Extract<keyof AddMessageDataType, string>\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessagePropsType, OwnPropsType> & OwnPropsType> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            {createField<AddMessagePropsType>(Textarea, [required, maxLength50], 'newMessageText', 'enter yor message')}\r\n            <Button text={\"Send message\"} />\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<AddMessagePropsType, OwnPropsType>({\r\n    form: 'addMessage'\r\n})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {\r\n        addMessage: actions.addMessage\r\n}),\r\n    withAuthRedirect)(Dialogs)\r\n"],"names":["props","path","id","className","style","src","link","to","activeClassName","name","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Textarea","required","Button","text","dialogsElements","dialogsPage","dialogs","map","dialog","messagesElements","messages","heading","newMessageText","addMessage","compose","connect","state","actions","withAuthRedirect","Dialogs"],"sourceRoot":""}